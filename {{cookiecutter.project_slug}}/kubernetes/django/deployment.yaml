apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  labels:
    deployment: django
spec:
  replicas: 2
  selector:
    matchLabels:
      pod: django
  template:
    metadata:
      labels:
        pod: django
    spec:
      containers:
        - name: django
          image: docker.io/dharoc/cookiecutter-project-production-django
          ports:
            - containerPort: 8000
          command: ["/entrypoint"]
          args: ["/start"]
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: config.settings.production

            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-credentials
                  key: secret_key

            - name: EMAIL_HOST
              value: test.com

            - name: WEB_CONCURRENCY
              value: "4"

            {% if cookiecutter.use_sentry == 'y' %}
            - name: SENTRY_DSN
              value:
            {% endif %}

            {% if cookiecutter.use_graylog == 'y' %}
            - name: GRAYLOG_HOST
              value:
            {% endif -%}

            - name: POSTGRES_HOST
              value: postgres-service

            - name: POSTGRES_PORT
              value: "25060"

            - name: POSTGRES_DB
              value: defaultdb

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: user

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password

            - name: POSTGRES_SSL
              value: "true"

            - name: REDIS_HOST
              value: redis-service

            - name: REDIS_PORT
              value: "25061"

            - name: REDIS_DB
              value: "0"

            - name: REDIS_USER
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: user

            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password

            - name: REDIS_SSL
              value: "true"
